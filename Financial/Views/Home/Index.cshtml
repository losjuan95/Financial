@model Financial.Models.ApplicationUser
@using Financial.Models
@using Financial.Helper
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Create";
    var AccountHelper = new BankAccountHelper();
    ApplicationDbContext db = new ApplicationDbContext();
    var currentuserid = HttpContext.Current.User.Identity.GetUserId();
    var householdinfo = new HouseHelper();
    var user = db.Users.Find(currentuserid);
    var userroles = new UserRolesHelpers();

}


<section class="content">
    <div class="container-fluid">
        <div class="block-header">
            <h2>DASHBOARD</h2>
        </div>

        <!-- Widgets -->
        <div class="row clearfix">
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="info-box bg-pink hover-expand-effect">
                    <button class="btn bg-black waves-effect icon" data-target="#remove" data-toggle="modal"><i class="material-icons">publish</i></button>

                    <div class="icon">
                        <i class="material-icons">playlist_add_check</i>
                    </div>
                    <div class="content">
                        <div class="text">NEW TASKS</div>
                        <div class="number count-to" data-from="0" data-to="" data-speed="15" data-fresh-interval="20"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="info-box bg-cyan hover-expand-effect">
                    <div class="icon">
                        <i class="material-icons">add_alert</i>
                    </div>
                    <div class="content">
                        <div class="text">NOTIFICATIONS</div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="info-box bg-light-green hover-expand-effect">
                    <button class="btn bg-green waves-effect icon" data-target="#addTransaction" data-toggle="modal"><i class="material-icons">forum</i></button>

                    @*<div class="icon">
                            <i class="material-icons">forum</i>
                        </div>*@
                    <div class="content">

                        <div class="text">INVITE</div>


                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                <div class="info-box bg-orange hover-expand-effect">
                    <div class="icon">
                        <i class="material-icons">person_add</i>
                    </div>
                    <div class="content">
                        <div class="text">NEW VISITORS</div>
                        <div class="number count-to" data-from="0" data-to="1225" data-speed="1000" data-fresh-interval="20"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row clearfix">

            <!-- Answered Tickets -->
            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                <div class="card">
                    <div class="body bg-teal">
                        <div class="font-bold m-b--35">HouseHold Info</div>


                        <ul class="dashboard-stat-list">

                            <li>
                                Members
                                <span class="pull-right"><b>@householdinfo.ListMembers().Count</b> <small>Members</small></span>
                            </li>
                            <li>
                                Accounts
                                <span class="pull-right"><b>@householdinfo.ListAccounts().Count</b> <small>Account</small></span>
                            </li>
                            <li>
                                Transactions
                                <span class="pull-right"><b>@householdinfo.ListUserTransactions().Count</b> <small>Transactions</small></span>
                            </li>
                            <li>
                                Budgets
                                <span class="pull-right"><b>@householdinfo.ListUserBudgets().Count</b> <small>Budgets</small></span>
                            </li>
                            @if (householdinfo.ListBudgetItems() == null)
                            {
                                <li>
                                    Budget Items
                                    <span class="pull-right"><b></b> <small>Budget Items</small></span>
                                </li>
                            }
                            <li>
                                Budget Items
                                <span class="pull-right"><b>@householdinfo.ListBudgetItems().Count</b> <small>Budget Items</small></span>
                            </li>
                        </ul>



                    </div>
                </div>
            </div>
            <!-- #END# Answered Tickets -->
            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                <div class="card">
                    <div class="body bg-teal">
                        <div class="font-bold m-b--35">Members in House</div>
                        <ul class="dashboard-stat-list">
                            @foreach (var member in householdinfo.ListMembers())
                            {
                                <li>
                                    <span>@member.FirstName</span>
                                </li>
                            }

                        </ul>


                    </div>
                </div>
            </div>

            <br />


        </div>
        <div class="row">


            <div class="col-md-6 ">
                <div class="body">
                    <div id="Accountchart"></div>
                </div>
            </div>

            <div class="row clearfix">
                <div class=" col-md-6 ">
                    <div id="BudgetPie"></div>
                </div>
            </div>

        </div>
    </div>
</section>
<div id="addTransaction" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" data-color="red">&times;</button>
                <h4 class="modal-title" style="text-align:center">Invite a Member</h4>
            </div>
            <div class="modal-body">




                @using (Html.BeginForm("Create", "Invitations", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <br />
                    <div class="input-group">
                        @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2 " })
                        <div class="col-md-10">
                            @Html.Editor("Email", new { htmlAttributes = new { placeholder = "Type Email Here", @class = "form-control" } })
                            @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <br />
                    <div class="input-group" id="editor">

                    </div>
                    <br />

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Send" class="btn btn-success" style="float:right;" />
                        </div>
                    </div>


                }





            </div>

        </div>

    </div>
</div>
<div id="remove" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" data-color="red">&times;</button>
                <h4 class="modal-title" style="text-align:center">Invite a Member</h4>
            </div>
            <div class="modal-body">
                <span><strong>Are You Sure You Want To Leave?</strong></span>
            </div>
            <div class="modal-footer">

                @using (Html.BeginForm("LeaveHouse", "Home"))
                {
                    @Html.AntiForgeryToken()
                    <button class="btn btn-danger waves-effect icon" type="submit">yes</button>

                }

                <button class="btn btn-success waves-effect icon" data-dismiss="modal" style="align-content:flex-start">No</button>
            </div>
        </div>
       
    </div>
</div>

@section scripts{
    <script>


        var chart = new CanvasJS.Chart("Accountchart", {
	        animationEnabled: true,
	        title: {
		        text: "House Info"
	        },
	        subtitles: [{
		        text: "Accounts"
	        }],
	        axisY: {
		        title: "Number of Transactions",
		        gridThickness: 0
	        },
	        data: [{
		        type: "bar",
		        indexLabel: "{y}",
		        dataPoints: @Html.Raw(ViewBag.DataPoints)
	        }]
        });
        chart.render();


    </script>
    <script>


        var chart = new CanvasJS.Chart("BudgetPie", {
            theme: "dark2",
            exportFileName: "Budgets",
            exportEnabled: true,
            animationEnabled: true,
            title: {
                text: "Monthly Expense"
            },
            legend: {
                cursor: "pointer",
                itemclick: explodePie
            },
            data: [{
                type: "doughnut",
                innerRadius: 90,
                showInLegend: true,
                toolTipContent: "<b>{name}</b>: ${y} (#percent%)",
                indexLabel: "{name} - #percent%",
                dataPoints: [
                    { y: 450, name: "Food" },
                    { y: 120, name: "Insurance" },
                    { y: 300, name: "Travelling" },
                    { y: 800, name: "Housing" },
                    { y: 150, name: "Education" },
                    { y: 150, name: "Shopping" },
                    { y: 250, name: "Others" }
                ]
            }]
        });
        chart.render();

        function explodePie(e) {
            if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
                e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
            } else {
                e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
            }
            e.chart.render();
        }


    </script>
}